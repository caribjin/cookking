#!/usr/bin/env bash

APP_DIR="app"
CONFIG_DIR="config"
BUNDLE_DIR="build/bundle"
ANDROID_DIR="build/android"

if [ -z "$METEOR_SRC" ]; then
	METEOR_SRC="$HOME/src/meteor"
fi

help() {
	cat <<-EOF

	Meteor start - Utility for running Meteor applications.
	    Usage: start [options]

	Options:
	    // running ----------------------------------------------------------------
	    dev | devel | development   Set the environment development
	    prod | production           Set the environment production
	    mobile <mobile server>      Run on a connected Android device

	    // deploy -----------------------------------------------------------------
	    build <server url>          Build your application
	    genkey <app-name>           (Optional) Generate private key for publish android apk
	    apk <app-name>              Make android apk package
	    mup <option>                Run meteor upload(mup) command.
	                                <option : setup | deploy | reconfig | logs etc>

	    --checkout                  Use a Meteor git checkout
	    --help                      Display help

	EOF
	exit 0
}

build() {
	cd "$APP_DIR"

	if [ -z "$SERVER" ]; then
		SERVER="localhost:3000"
	fi

	local MESSAGE="Starting build your app to production"
	local CMD="meteor build ../build --server=$SERVER --directory"

	echo "/==============================================================================="
	echo "  $MESSAGE"
	echo "  command: $CMD"
	echo "===============================================================================/"

	eval $CMD

	echo "Build complete"

	exit 0
}

upload() {
	cd "$CONFIG_DIR/production"
	local CMD="mup $MUP_OPTION"

	eval $CMD

	exit 0
}

generate_key() {
	if [ -z "$APP_NAME" ]; then
		echo "Not entered application name."
		exit 0
	fi

	echo "[[[ Generating private key.. ]]]"
	eval "keytool -genkey -alias $APP_NAME -keyalg RSA -keysize 2048 -validity 10000"

	exit 0
}

make_android_production() {
	if [ -z "$APP_NAME" ]; then
		echo "Not entered application name."
		exit 0
	fi

	if [ -e "$ANDROID_DIR" ]; then
		cd "$ANDROID_DIR"

		echo "[[[ Signing to app.. ]]]"
		eval "jarsigner -digestalg SHA1 unaligned.apk $APP_NAME"

		if [ $? -ne 0 ]; then
		    exit 0
		fi

		echo ""
		echo "[[[ Creating apk file.. ]]]"
		eval "~/.meteor/android_bundle/android-sdk/build-tools/20.0.0/zipalign -f 4 unaligned.apk production.apk"

		echo "Done."
	else
		echo "Not exist application build output directory for android - $ANDROID_DIR"
		echo "First run './start build'"
	fi

	exit 0
}

main() {
	if [ -z "$NODE_ENV" ]; then
		NODE_ENV="development"
	fi

	local env_file="$CONFIG_DIR/$NODE_ENV/env.sh";
	local settings_file="$CONFIG_DIR/$NODE_ENV/settings.json";

	if [ -f "$env_file" ]; then source "$env_file"; fi

	if [ -f "$settings_file" ]; then
		export METEOR_SETTINGS="$(cat $settings_file)"
	fi

	if [ "$CHECKOUT" ]; then
		if [ ! -d "$METEOR_SRC" ]; then
			echo "Error: To run from a git checkout of meteor, please set the METEOR_SRC env variable to a valid meteor source folder."
			exit 1;
		fi

		echo "Using a Meteor git checkout."
		METEOR="$METEOR_SRC/meteor"
	else
		METEOR="meteor"
	fi

	if [ "$NODE_ENV" == "production" ]; then
		if [ -e "$BUNDLE_DIR" ]; then
			cd "$BUNDLE_DIR"
			echo "Installing server npm packages..."
			(cd programs/server && npm install)

			local MESSAGE="Starting your app in $NODE_ENV on port $PORT"
			local CMD="node main.js"
		else
			echo "Not exist application build output directory - $BUNDLE_DIR"
			exit 0
		fi
	elif [ "$NODE_ENV" == "development" ]; then
		cd "$APP_DIR"

		local MESSAGE="Starting your app in $NODE_ENV."
		local CMD="$METEOR --settings ../$settings_file"
	elif [ "$NODE_ENV" == "android-device" ]; then
		cd "$APP_DIR"
		settings_file="$CONFIG_DIR/development/settings.json";

		if [ -z "$MOBILE_SERVER" ]; then
			MOBILE_SERVER="localhost:3000"
		fi

		local MESSAGE="Starting your app in $NODE_ENV on Android device."
		local CMD="$METEOR run android-device --mobile-server=$MOBILE_SERVER --settings ../$settings_file"
	fi

	echo "/==============================================================================="
	echo "  $MESSAGE"
	echo "  command: $CMD"
	echo "===============================================================================/"
	eval $CMD

	exit 0
}

if [ $# -eq 0 ]; then
	main
else
	while [ $# -ne 0 ]; do
		case $1 in
			build)                  SERVER="$2";build ;;
			prod|production)        export NODE_ENV="production" ;;
			dev|devel|development)  export NODE_ENV="development" ;;
			mobile)                 export NODE_ENV="android-device";MOBILE_SERVER="$2"; shift ;;
			mup)                    MUP_OPTION="$2";upload ;;
			genkey)                 APP_NAME="$2";genkey ;;
			apk)                    APP_NAME="$2";make_android_production ;;
			--checkout)             CHECKOUT=true ;;
			-h|--help|help)         help ;;
			*)                      help ;;
		esac
			shift
		done

	main $1
fi