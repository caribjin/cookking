// standard text input
input[type="text"],
input[type="email"],
input[type="password"],
textarea {
	.font-s2;
	.type-regular;

	line-height: 1.5em !important;

	//Style
	.placeholder(@color-medium);
	//background: transparent;
	border: none;
	border-radius: 0;
	box-sizing: border-box;
	color: @color-full;
	outline: none;
	width: 100%;

	&:active,
	&:focus {

	}

	&[disabled] { opacity: .5; }
}

input[type="text"].lg,
input[type="email"].lg,
input[type="password"].lg,
textarea.lg {
	.padding(16px, 20px);
}

input[type="text"].md,
input[type="email"].md,
input[type="password"].md,
textarea.md {
	.padding(12px, 15px);
}

input[type="text"].sm,
input[type="email"].sm,
input[type="password"].sm,
textarea.sm {
	.padding(8px, 10px);
}

input[type="text"].xs,
input[type="email"].xs,
input[type="password"].xs,
textarea.xs {
	.padding(4px, 5px);
}

input[type=text].underline {
	border-bottom: #6699cc 1px dashed;
}

// Custom checkbox
.checkbox {
	.font-s3;
	.type-bold;
	color: @color-medium;
	clear: both;
	display: block;
	line-height: 1rem !important;

	cursor: pointer;
	min-height: 1em;
	position: relative; //necessary for special styling

	input[type="checkbox"] {
		font-size: 1em;
		visibility: hidden;

		& + span:before {
			.position(relative, auto, auto, auto, -1em, .85em, .85em);
			content: '';
			box-shadow: @color-medium 0 0 0 1px inset;
			display: inline-block;
		}

		&:checked + span:before {
			box-shadow: none;
			color: @color-primary;

			// Icon family from icon.lessimport
			font-family: 'market';
			speak: none;
			font-style: normal;
			font-weight: normal;
			font-variant: normal;
			text-transform: none;
			line-height: 1;

			// Better Font Rendering
			-webkit-font-smoothing: antialiased;
			-moz-osx-font-smoothing: grayscale;

			// Checkmark icon
			content: "\e609";
		}
	}
}

// Input with an icon
.form,
.form-group {
	& .error {
		border: @color-negative 1px solid;
	}
}

.input-symbol {
	display: inline-block;
	position: relative;

	&.error [class^="icon-"],
	&.error [class*=" icon-"] {
		color: @color-negative;
	}

	// Position & padding
	[class^="icon-"],
	[class*=" icon-"] {
		left: 1em;
	}

	input { padding-left: 3em; }

	// Styling
	input {
		width: 100%;

		&:focus {
			& + [class^="icon-"],
			& + [class*=" icon-"] {
				color: @color-primary;
			}
		}
	}

	[class^="icon-"],
	[class*=" icon-"] {
		.transition( all 300ms ease-in );
		.transform(translate3d(0,-50%,0));
		background: transparent;
		color: @color-medium;
		font-size: 1em;
		height: 1em;
		position: absolute;
		top: 50%;
		width: 1em;
	}
}

.form {
	.padding-left(10px);
	.padding-right(10px);
	.width(100%);

	.form-row-header {
		.font-s3;
		text-align: right;
	}

	.form-row {
		.font-s3;
		.margin-bottom(25px);
		.line-height(20px);

		label {
			.type-bold;
			display: inline-block;
			vertical-align: middle;
		}

		label:first-child {
			.min-width(75px);
		}

		.form-subrow {
			.margin-top(15px);
			.margin-left(4%);
			.margin-right(2%);
			display: flex;

			.col {
				display: inline-block;
				width: 50%;
				float: left;
			}

			span:first-child {
				.padding-top(6px);
			}
		}
	}
}

.inline-box {
	display: flex;
}

.inline-text {
	/* Shrink and grow as needed, but never shrink so small that we can't read the placeholder */
	flex: 1 0 8em;
}

.inline-button {
	/* Never shrink or grow */
	flex: 0 0 auto;
}

.inline-box:before {
	/* Don't shrink or grow and use a default size */
	flex: 0 0 2.75em;
}
